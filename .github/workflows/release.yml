name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
      prerelease:
        description: 'Set TRUE for pre-release'
        required: false
        default: 'FALSE'

jobs:

  release:
    name: Publish a new release
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:

      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate changelog from latest release
        id: changelog
        if: ${{ github.event.inputs.prerelease != 'TRUE' }}
        uses: metcalfc/changelog-generator@v3.0.0
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ github.event.inputs.version }}"
          release_name: "Versione ${{ github.event.inputs.version }}"
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: ${{ github.event.inputs.prerelease == 'TRUE' }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and publish PROD image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: tests/docker/Dockerfile
          target: application_prod
          push: true
          tags: |
            ghcr.io/trinko/giuaschool:latest
            ghcr.io/trinko/giuaschool:${{ github.event.inputs.version }}

      - name: Build and publish DEV image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: tests/docker/Dockerfile
          target: application_dev
          push: true
          tags: |
            ghcr.io/trinko/giuaschool-dev:latest
            ghcr.io/trinko/giuaschool-dev:${{ github.event.inputs.version }}

      - name: Build and publish TEST image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: tests/docker/Dockerfile
          push: true
          tags: |
            ghcr.io/trinko/giuaschool-test:latest
            ghcr.io/trinko/giuaschool-test:${{ github.event.inputs.version }}

      - name: Create archive for release code
        run: |
          docker run --name "gs_release" ghcr.io/trinko/giuaschool:${{ github.event.inputs.version }} tests/docker/release.sh
          docker cp gs_release:/var/www/giuaschool-release.zip giuaschool-release-v${{ github.event.inputs.version }}.zip
          docker cp gs_release:/var/www/giuaschool-release.md5.zip giuaschool-release-v${{ github.event.inputs.version }}.md5.zip

      - name: Publish release code
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: giuaschool-release-v${{ github.event.inputs.version }}.*
          file_glob: true
          tag: "v${{ github.event.inputs.version }}"

      - name: Create version tag for documentation
        if: ${{ github.event.inputs.prerelease != 'TRUE' }}
        run: |
          mkdir docs
          echo "tag: ${{ github.event.inputs.version }}" > docs/version.yml

      - name: Add version tag to documentation
        if: ${{ github.event.inputs.prerelease != 'TRUE' }}
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source_file: 'docs/version.yml'
          destination_repo: 'trinko/giuaschool-docs'
          destination_branch: 'master'
          destination_folder: '_data'
          user_name: ${{ github.actor }}
          user_email: '${{ github.actor }}@users.noreply.github.com'
          commit_message: 'Add version tag to documentation'

      - name: Generate changelog pages
        if: ${{ github.event.inputs.prerelease != 'TRUE' }}
        run: |
          rm -f docs/*.yml
          #####----- latest release page
          echo "---" > docs/latest-release.md
          echo "layout: default" >> docs/latest-release.md
          echo "title: Ultima versione" >> docs/latest-release.md
          echo "nav_order: 10" >> docs/latest-release.md
          echo "---" >> docs/latest-release.md
          echo "" >> docs/latest-release.md
          echo "# Ultima versione"  >> docs/latest-release.md
          echo "{: .text-center .fw-400 .pb-5}" >> docs/latest-release.md
          echo "" >> docs/latest-release.md
          echo "[**Scarica la Versione {{ site.data.version.tag }}**](https://github.com/trinko/giuaschool/releases/download/v{{ site.data.version.tag }}/giuaschool-release-v{{ site.data.version.tag }}.zip)" >> docs/latest-release.md
          echo "{: .text-center .pb-5}" >> docs/latest-release.md
          echo "" >> docs/latest-release.md
          echo "Data e ora di rilascio: `TZ='Europe/Rome' date +'%d/%m/%Y %H:%M'`" >> docs/latest-release.md
          echo "" >> docs/latest-release.md
          echo "Lista delle modifiche incluse nella nuova versione:"  >> docs/latest-release.md
          echo "" >> docs/latest-release.md
          echo "${{ steps.changelog.outputs.changelog }}"  >> docs/latest-release.md
          #####----- latest build page
          echo "---" > docs/latest-build.md
          echo "layout: default" >> docs/latest-build.md
          echo "title: 'Ultimo aggiornamento'" >> docs/latest-build.md
          echo "nav_order: 11" >> docs/latest-build.md
          echo "---" >> docs/latest-build.md
          echo "" >> docs/latest-build.md
          echo "# Ultimo aggiornamento"  >> docs/latest-build.md
          echo "{: .text-center .fw-400 .pb-5}" >> docs/latest-build.md
          echo "" >> docs/latest-build.md
          echo "Nessuna modifica dal rilascio dell'ultima versione" >> docs/latest-build.md

      - name: Add changelog pages to documentation
        if: ${{ github.event.inputs.prerelease != 'TRUE' }}
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source_file: 'docs/.'
          destination_repo: 'trinko/giuaschool-docs'
          destination_branch: 'master'
          user_name: ${{ github.actor }}
          user_email: '${{ github.actor }}@users.noreply.github.com'
          commit_message: 'Add changelog pages to documentation'
