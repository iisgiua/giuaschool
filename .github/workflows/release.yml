name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
      prerelease:
        description: 'Set true for pre-release'
        required: false
        default: false
        type: boolean

jobs:

  release:
    name: Publish a new release
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.previous-release.outputs.release }}
    steps:

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get latest release tag
        id: previous-release
        uses: rez0n/actions-github-release@main
        with:
          token: ${{ github.token }}
          repository: "iisgiua/giuaschool"
          type: "stable"

      - name: Generate changelog from latest release
        id: changelog
        if: ${{ !github.event.inputs.prerelease }}
        uses: metcalfc/changelog-generator@v4.6.2
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: ${{ github.event.inputs.prerelease }}
          tag: "v${{ github.event.inputs.version }}"
          name: "Versione ${{ github.event.inputs.version }}"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and publish PROD image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: tests/docker/Dockerfile
          target: prod
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/iisgiua/giuaschool:latest
            ghcr.io/iisgiua/giuaschool:${{ github.event.inputs.version }}

      - name: Build and publish DEV image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: tests/docker/Dockerfile
          target: dev
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/iisgiua/giuaschool-dev:latest
            ghcr.io/iisgiua/giuaschool-dev:${{ github.event.inputs.version }}

      - name: Build and publish TEST image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: tests/docker/Dockerfile
          target: test
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/iisgiua/giuaschool-test:latest
            ghcr.io/iisgiua/giuaschool-test:${{ github.event.inputs.version }}

      - name: Create archive for release code
        run: |
          docker run --name gs_release ghcr.io/iisgiua/giuaschool:${{ github.event.inputs.version }} tests/docker/release.sh
          docker cp gs_release:/var/www/giuaschool-release.zip giuaschool-release-v${{ github.event.inputs.version }}.zip
          docker cp gs_release:/var/www/giuaschool-release.md5.zip giuaschool-release-v${{ github.event.inputs.version }}.md5.zip
          docker rm gs_release

      - name: Publish release code
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: giuaschool-release-v${{ github.event.inputs.version }}.*
          file_glob: true
          tag: "v${{ github.event.inputs.version }}"

      - name: Create version tag and changelog page
        if: ${{ !github.event.inputs.prerelease }}
        run: |
          mkdir -p docs/_data
          echo "tag: ${{ github.event.inputs.version }}" > docs/_data/version.yml
          echo "tag: 0" > docs/_data/build.yml
          export CHANGELOG="${{ steps.changelog.outputs.changelog }}"
          export TIMESTAMP="`TZ='Europe/Rome' date +'%d/%m/%Y %H:%M'`"
          envsubst < .github/templates/latest-release.md.tmpl > docs/latest-release.md
          envsubst < .github/templates/latest-build_void.md.tmpl > docs/latest-build.md

      - name: Add version tag and changelog pages to documentation
        if: ${{ !github.event.inputs.prerelease }}
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source_file: 'docs/.'
          destination_repo: 'iisgiua/giuaschool-docs'
          destination_branch: 'master'
          user_name: ${{ github.actor }}
          user_email: '${{ github.actor }}@users.noreply.github.com'
          commit_message: 'Add version tag and changelog pages to documentation'

  test-update:
    needs: release
    name: Test update procedure
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Test update procedure
        run: |
          TAG="${{ needs.release.outputs.tag }}"
          docker build --build-arg VERSION=${TAG:1} --build-arg NEWVERSION="${{ github.event.inputs.version }}" --build-arg NEWBUILD="0" -t gs:test2 -f tests/docker/TestUpdateDockerfile .
          docker run --rm --name gs_test2 --add-host=giuaschool_test:127.0.0.1 --add-host=chrome_headless:127.0.0.1 gs:test2
