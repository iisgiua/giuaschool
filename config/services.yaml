# config/services.yaml

parameters:
  locale: it
  locale_date: 'd/m/Y'
  locale_time: 'H:i'
  locale_datetime: 'd/m/Y H:i'
  dir_archivio:   '%kernel.project_dir%/FILES/archivio'
  dir_tmp:        '%kernel.project_dir%/FILES/tmp'
  dir_upload:     '%kernel.project_dir%/FILES/upload'
  dir_classi:     '%kernel.project_dir%/FILES/archivio/classi'
  dir_registri:   '%kernel.project_dir%/FILES/archivio/registri'
  dir_scrutini:   '%kernel.project_dir%/FILES/archivio/scrutini'
  dir_avvisi:     '%kernel.project_dir%/FILES/upload/avvisi'
  dir_circolari:  '%kernel.project_dir%/FILES/upload/circolari'
  dir_documenti:  '%kernel.project_dir%/FILES/upload/documenti'

services:
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    public: false       # Allows optimizing the container by removing unused services
    bind:               # Pass defined values to any <$name> argument for any service
      $dirProgetto:     '%kernel.project_dir%'
      $dirScrutini:     '%dir_scrutini%'
      $dirClassi:       '%dir_classi%'
      $dirArchivio:     '%dir_archivio%'
      $dirTemp:         '%dir_tmp%'
      $dirUpload:       '%dir_upload%'
      $connessioneDB:   '@doctrine.dbal.connection_factory'

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/*'
    exclude: '../src/{Command,Entity,Install,Kernel.php}'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: '../src/Controller'
    tags: ['controller.service_arguments']

  # explicit commands registration
  App\Command\:
    resource: '../src/Command/*'
    tags:
      - { name: console.command }
      - { name: monolog.logger, channel: command }

  # necessario per evitare warning di servizio deprecato
  App\Util\CsvImporter:
    arguments:
      $valbuilder: '@validator.builder'

  # necessario per evitare warning di servizio deprecato
  App\Util\PdfManager:
    arguments:
      $pdfcontroller: '@qipsius.tcpdf'

  # necessario per aggiungere un processor a monolog
  App\Util\LogProcessor:
    autowire: true
    tags:
      - { name: 'monolog.processor', method: 'processRecord' }

  # necessario per aggiungere parametro di configurazione
  App\Util\ScrutinioUtil:
    arguments:
      $root: '%dir_scrutini%'

  # necessario per aggiungere parametro di configurazione
  App\Util\PagelleUtil:
    arguments:
      $root: '%dir_scrutini%'

  # necessario per aggiungere parametro di configurazione
  App\Util\ArchiviazioneUtil:
    arguments:
      $root: '%dir_archivio%'
      $dirCircolari: '%dir_circolari%'
      $localpath: '%env(LOCAL_PATH)%'

  # necessario per aggiungere parametro di configurazione
  App\Util\OtpUtil:
    arguments:
      $qrcode_file: '%kernel.project_dir%/vendor/tecnickcom/tcpdf/tcpdf_barcodes_2d.php'

  # usato per il logout
  App\EventListener\LogoutListener:
    tags:
      - name: 'kernel.event_listener'
        event: 'Symfony\Component\Security\Http\Event\LogoutEvent'
        dispatcher: security.event_dispatcher.main
        method: onLogoutEvent
