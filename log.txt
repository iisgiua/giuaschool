
60 files with changes
=====================

1) src/Entity/Configurazione.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\ConfigurazioneRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per la configurazione
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 32, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 32, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 32, maxMessage: 'field.maxlength')]
   private ?string $categoria = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 64, unique: true, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 64, unique: true, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 64, maxMessage: 'field.maxlength')]
   private ?string $parametro = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1024, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1024, nullable: false)]
   #[Assert\Length(max: 1024, maxMessage: 'field.maxlength')]
   private ?string $descrizione = '';

@@ @@
   /**
    * @var string|null $valore Valore della configurazione
    */
-  #[ORM\Column(type: 'text', nullable: false)]
+  #[ORM\Column(type: Types::TEXT, nullable: false)]
   private ?string $valore = '';

   /**
    * @var bool $gestito Indica se il parametro viene gestito da una procedura apposita
    */
-  #[ORM\Column(type: 'boolean', nullable: false)]
+  #[ORM\Column(type: Types::BOOLEAN, nullable: false)]
   private bool $gestito = false;
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


2) src/Entity/Corso.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\CorsoRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per il corso
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 128, unique: true, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 128, unique: true, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 128, maxMessage: 'field.maxlength')]
   private ?string $nome = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(name: 'nome_breve', type: 'string', length: 32, unique: true, nullable: false)]
+  #[ORM\Column(name: 'nome_breve', type: Types::STRING, length: 32, unique: true, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 32, maxMessage: 'field.maxlength')]
   private ?string $nomeBreve = '';
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


3) src/Entity/DefinizioneConsiglio.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\DefinizioneConsiglioRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per lo scrutinio
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
-   * @var DateTime|null $data Data per lo svolgimento della riunione
-   *
+   * @var DateTimeInterface|null $data Data per lo svolgimento della riunione
    */
-  #[ORM\Column(type: 'date', nullable: false)]
+  #[ORM\Column(type: Types::DATE_MUTABLE, nullable: false)]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   #[Assert\NotBlank(message: 'field.notblank')]
   private ?DateTime $data = null;
@@ @@
   /**
    * @var array|null $argomenti Lista degli argomenti dell'ordine del giorno [array($id_numerico => $stringa_argomento, ...)]
    */
-  #[ORM\Column(type: 'array', nullable: true)]
+  #[ORM\Column(type: Types::ARRAY, nullable: true)]
   private ?array $argomenti = [];

   /**
    * @var array|null $dati Lista di dati utili per la verbalizzazione
    */
-  #[ORM\Column(type: 'array', nullable: true)]
+  #[ORM\Column(type: Types::ARRAY, nullable: true)]
   private ?array $dati = [];

   //==================== EVENTI ORM ====================
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


4) src/Entity/DefinizioneRichiesta.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\DefinizioneRichiestaRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificatore univoco
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 128, unique: true, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 128, unique: true, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 128, maxMessage: 'field.maxlength')]
   private string $nome = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 16, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 16, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 16, maxMessage: 'field.maxlength')]
   private string $richiedenti = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 16, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 16, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 16, maxMessage: 'field.maxlength')]
   private string $destinatari = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 128, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 128, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 128, maxMessage: 'field.maxlength')]
   private string $modulo = '';
@@ @@
   /**
    * @var array $campi Lista dei campi da compilare nel modulo: nome1 => tipo1, nome2 => tipo2... I tipi ammessi sono: string/text/int/float/bool/date/time
    */
-  #[ORM\Column(type: 'array', nullable: false)]
+  #[ORM\Column(type: Types::ARRAY, nullable: false)]
   private array $campi = [];

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'smallint', nullable: false)]
+  #[ORM\Column(type: Types::SMALLINT, nullable: false)]
   #[Assert\PositiveOrZero(message: 'field.zeropositive')]
   private int $allegati = 0;

@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 1, maxMessage: 'field.maxlength')]
   private string $tipo = '*';
@@ @@
   /**
    * @var bool $unica Indica se è ammessa una sola richiesta per l'utente
    */
-  #[ORM\Column(type: 'boolean', nullable: false)]
+  #[ORM\Column(type: Types::BOOLEAN, nullable: false)]
   private bool $unica = false;

   /**
    * @var bool $gestione Indica se il modulo richiede la gestione degli stati
    */
-  #[ORM\Column(type: 'boolean', nullable: false)]
+  #[ORM\Column(type: Types::BOOLEAN, nullable: false)]
   private bool $gestione = true;

   /**
    * @var bool $abilitata Indica se la definizione della richiesta è abilitata
    */
-  #[ORM\Column(type: 'boolean', nullable: false)]
+  #[ORM\Column(type: Types::BOOLEAN, nullable: false)]
   private bool $abilitata = true;
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


5) src/Entity/DefinizioneScrutinio.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\DefinizioneScrutinioRepository;
 use DateTime;
 use Doctrine\ORM\Mapping as ORM;
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['P', 'S', 'F', 'G', 'R', 'X'], strict: true, message: 'field.choice')]
   private ?string $periodo = 'P';

   /**
-   * @var DateTime|null $dataProposte Inizio dell'inserimento delle proposte di voto
-   *
+   * @var DateTimeInterface|null $dataProposte Inizio dell'inserimento delle proposte di voto
    */
-  #[ORM\Column(name: 'data_proposte', type: 'date', nullable: false)]
+  #[ORM\Column(name: 'data_proposte', type: Types::DATE_MUTABLE, nullable: false)]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   #[Assert\NotBlank(message: 'field.notblank')]
   private ?DateTime $dataProposte = null;
@@ @@
   /**
    * @var array $struttura Lista delle parti dello scrutinio [array($passo_numerico => array($nome_funzione,$da_validare,array(args)), ...)]
    */
-  #[ORM\Column(type: 'array', nullable: false)]
+  #[ORM\Column(type: Types::ARRAY, nullable: false)]
   private array $struttura = [];

   /**
    * @var array $classiVisibili Lista di data e ora di pubblicazione esiti per le classi dei vari anni
    */
-  #[ORM\Column(name: 'classi_visibili', type: 'array', nullable: false)]
+  #[ORM\Column(name: 'classi_visibili', type: Types::ARRAY, nullable: false)]
   private array $classiVisibili = [];
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


6) src/Entity/DerogaAssenza.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\DerogaAssenzaRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per la deroga per le assenze
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
-   * @var DateTime|null $data Data dell'assenza per cui vale la deroga
-   *
+   * @var DateTimeInterface|null $data Data dell'assenza per cui vale la deroga
    */
-  #[ORM\Column(type: 'date', nullable: false)]
+  #[ORM\Column(type: Types::DATE_MUTABLE, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $data = null;
@@ @@
   /**
    * @var string|null $motivazione Motivazione della deroga
    */
-  #[ORM\Column(type: 'text', nullable: false)]
+  #[ORM\Column(type: Types::TEXT, nullable: false)]
   private ?string $motivazione = '';
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


7) src/Entity/Docente.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
 use App\Repository\DocenteRepository;
 use Doctrine\ORM\Mapping as ORM;
 use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;
@@ @@
   /**
    * @var bool $responsabileBes Indica se il docente ha accesso alle funzioni di responsabile BES
    */
-  #[ORM\Column(name: 'responsabile_bes', type: 'boolean', nullable: false)]
+  #[ORM\Column(name: 'responsabile_bes', type: Types::BOOLEAN, nullable: false)]
   private bool $responsabileBes = false;

   /**
@@ @@
   /**
    * @var bool $rspp Indica se il docente è il responsabile della sicurezza
    */
-  #[ORM\Column(name: 'rspp', type: 'boolean', nullable: false)]
+  #[ORM\Column(name: 'rspp', type: Types::BOOLEAN, nullable: false)]
   private bool $rspp = false;
    ----------- end diff -----------

Applied rules:
 * AttributeKeyToClassConstFetchRector


8) src/Entity/Documento.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\DocumentoRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['L', 'P', 'R', 'M', 'H', 'D', 'C', 'G'], strict: true, message: 'field.choice')]
   private ?string $tipo = 'G';

@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 255, nullable: true)]
+  #[ORM\Column(type: Types::STRING, length: 255, nullable: true)]
   #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
   private ?string $cifrato = '';

@@ @@
   /**
    * @var bool $firma Indica se è richiesta la firma di presa visione
    */
-  #[ORM\Column(type: 'boolean', nullable: false)]
+  #[ORM\Column(type: Types::BOOLEAN, nullable: false)]
   private bool $firma = false;
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


9) src/Entity/Entrata.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\EntrataRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per l'entrata in ritardo
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
-   * @var DateTime|null $data Data dell'entrata in ritardo
-   *
+   * @var DateTimeInterface|null $data Data dell'entrata in ritardo
    */
-  #[ORM\Column(type: 'date', nullable: false)]
+  #[ORM\Column(type: Types::DATE_MUTABLE, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $data = null;

   /**
-   * @var DateTime|null $ora Ora di entrata in ritardo
-   *
+   * @var DateTimeInterface|null $ora Ora di entrata in ritardo
    */
-  #[ORM\Column(type: 'time', nullable: false)]
+  #[ORM\Column(type: Types::TIME_MUTABLE, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $ora = null;
@@ @@
   /**
    * @var bool $ritardoBreve Indica se l'entrata in ritardo è un ritardo breve oppure no
    */
-  #[ORM\Column(name: 'ritardo_breve', type: 'boolean', nullable: false)]
+  #[ORM\Column(name: 'ritardo_breve', type: Types::BOOLEAN, nullable: false)]
   private bool $ritardoBreve = false;

   /**
    * @var string|null $note Note informative sull'entrata in ritardo
    */
-  #[ORM\Column(type: 'text', nullable: true)]
+  #[ORM\Column(type: Types::TEXT, nullable: true)]
   private ?string $note = '';

   /**
    * @var bool $valido Indica se l'entrata in ritardo è valida per il conteggio del numero massimo di entrate a disposizione
    */
-  #[ORM\Column(type: 'boolean', nullable: false)]
+  #[ORM\Column(type: Types::BOOLEAN, nullable: false)]
   private bool $valido = false;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1024, nullable: true)]
+  #[ORM\Column(type: Types::STRING, length: 1024, nullable: true)]
   #[Assert\Length(max: 1024, maxMessage: 'field.maxlength')]
   private ?string $motivazione = '';

   /**
-   * @var DateTime|null $giustificato Data della giustificazione
-   *
+   * @var DateTimeInterface|null $giustificato Data della giustificazione
    */
-  #[ORM\Column(type: 'date', nullable: true)]
+  #[ORM\Column(type: Types::DATE_MUTABLE, nullable: true)]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $giustificato = null;
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


10) src/Entity/Esito.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\EsitoRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per l'esito
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: true)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: true)]
   #[Assert\Choice(choices: ['A', 'N', 'S', 'R', 'L', 'E', 'X'], strict: true, message: 'field.choice')]
   private ?string $esito = null;

@@ @@
   /**
    * @var float|null $media Media dei voti
    */
-  #[ORM\Column(type: 'float', nullable: true)]
+  #[ORM\Column(type: Types::FLOAT, nullable: true)]
   private ?float $media = 0;

   /**
    * @var int|null $credito Punteggio di credito
    */
-  #[ORM\Column(type: 'integer', nullable: true)]
+  #[ORM\Column(type: Types::INTEGER, nullable: true)]
   private ?int $credito = 0;

   /**
    * @var int|null $creditoPrecedente Punteggio di credito degli anni precedenti
    */
-  #[ORM\Column(name: 'credito_precedente', type: 'integer', nullable: true)]
+  #[ORM\Column(name: 'credito_precedente', type: Types::INTEGER, nullable: true)]
   private ?int $creditoPrecedente = 0;

   /**
    * @var array|null $dati Lista dei dati sull'esito (giudizio ammissione e delibera)
    */
-  #[ORM\Column(type: 'array', nullable: true)]
+  #[ORM\Column(type: Types::ARRAY, nullable: true)]
   private ?array $dati = [];

   /**
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


11) src/Entity/Festivita.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\FestivitaRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per la festività
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
-   * @var DateTime|null $data Data della festività
-   *
+   * @var DateTimeInterface|null $data Data della festività
    */
-  #[ORM\Column(type: 'date', nullable: false)]
+  #[ORM\Column(type: Types::DATE_MUTABLE, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   private ?DateTime $data = null;

@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 128, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 128, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 128, maxMessage: 'field.maxlength')]
   private ?string $descrizione = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['F', 'A'], strict: true, message: 'field.choice')]
   private ?string $tipo = 'F';
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


12) src/Entity/File.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\FileRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 255, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 255, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
   private ?string $titolo = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 255, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 255, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
   private ?string $nome = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 16, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 16, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 16, maxMessage: 'field.maxlength')]
   private ?string $estensione = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'integer', nullable: false)]
+  #[ORM\Column(type: Types::INTEGER, nullable: false)]
   #[Assert\Positive(message: 'field.positive')]
   private int $dimensione = 0;

@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 255, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 255, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
   private ?string $file = '';
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


13) src/Entity/Firma.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\FirmaRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per la firma
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


14) src/Entity/FirmaSostegno.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
 use App\Repository\FirmaSostegnoRepository;
 use Doctrine\ORM\Mapping as ORM;

@@ @@
   /**
    * @var string|null $argomento Argomento della lezione di sostegno
    */
-  #[ORM\Column(type: 'text', nullable: true)]
+  #[ORM\Column(type: Types::TEXT, nullable: true)]
   private ?string $argomento = '';

   /**
    * @var string|null $attivita Attività della lezione di sostegno
    */
-  #[ORM\Column(type: 'text', nullable: true)]
+  #[ORM\Column(type: Types::TEXT, nullable: true)]
   private ?string $attivita = '';

   /**
    ----------- end diff -----------

Applied rules:
 * AttributeKeyToClassConstFetchRector


15) src/Entity/Genitore.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
 use App\Repository\GenitoreRepository;
 use Doctrine\ORM\Mapping as ORM;

@@ @@
   /**
    * @var bool $giustificaOnline Indica se il genitore può effettuare la giustificazione online oppure no
    */
-  #[ORM\Column(name: 'giustifica_online', type: 'boolean', nullable: false)]
+  #[ORM\Column(name: 'giustifica_online', type: Types::BOOLEAN, nullable: false)]
   private bool $giustificaOnline = true;

   /**
    ----------- end diff -----------

Applied rules:
 * AttributeKeyToClassConstFetchRector


16) src/Entity/Istituto.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\IstitutoRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per l'istituto scolastico
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 128, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 128, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 128, maxMessage: 'field.maxlength')]
   private ?string $tipo = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(name: 'tipo_sigla', type: 'string', length: 16, nullable: false)]
+  #[ORM\Column(name: 'tipo_sigla', type: Types::STRING, length: 16, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 16, maxMessage: 'field.maxlength')]
   private ?string $tipoSigla = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 128, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 128, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 128, maxMessage: 'field.maxlength')]
   private ?string $nome = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(name: 'nome_breve', type: 'string', length: 32, nullable: false)]
+  #[ORM\Column(name: 'nome_breve', type: Types::STRING, length: 32, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 32, maxMessage: 'field.maxlength')]
   private ?string $nomeBreve = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 255, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 255, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
   #[Assert\Email(message: 'field.email')]
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 255, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 255, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
   #[Assert\Email(message: 'field.email')]
@@ @@
    *
    *
    */
-  #[ORM\Column(name: 'url_sito', type: 'string', length: 255, nullable: false)]
+  #[ORM\Column(name: 'url_sito', type: Types::STRING, length: 255, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
   #[Assert\Url(message: 'field.url')]
@@ @@
    *
    *
    */
-  #[ORM\Column(name: 'url_registro', type: 'string', length: 255, nullable: false)]
+  #[ORM\Column(name: 'url_registro', type: Types::STRING, length: 255, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
   #[Assert\Url(message: 'field.url')]
@@ @@
    *
    *
    */
-  #[ORM\Column(name: 'firma_preside', type: 'string', length: 255, nullable: false)]
+  #[ORM\Column(name: 'firma_preside', type: Types::STRING, length: 255, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
   private ?string $firmaPreside = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(name: 'email_amministratore', type: 'string', length: 255, nullable: false)]
+  #[ORM\Column(name: 'email_amministratore', type: Types::STRING, length: 255, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
   #[Assert\Email(message: 'field.email')]
@@ @@
    *
    *
    */
-  #[ORM\Column(name: 'email_notifiche', type: 'string', length: 255, nullable: false)]
+  #[ORM\Column(name: 'email_notifiche', type: Types::STRING, length: 255, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
   #[Assert\Email(message: 'field.email')]
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


17) src/Entity/Lezione.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\LezioneRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per la lezione
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
-   * @var DateTime|null $data Data della lezione
-   *
+   * @var DateTimeInterface|null $data Data della lezione
    */
-  #[ORM\Column(type: 'date', nullable: false)]
+  #[ORM\Column(type: Types::DATE_MUTABLE, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $data = null;
@@ @@
   /**
    * @var int $ora Numero dell'ora di lezione [1,2,...]
    */
-  #[ORM\Column(type: 'smallint', nullable: false)]
+  #[ORM\Column(type: Types::SMALLINT, nullable: false)]
   private int $ora = 1;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 64, nullable: true)]
+  #[ORM\Column(type: Types::STRING, length: 64, nullable: true)]
   #[Assert\Length(max: 64, maxMessage: 'field.maxlength')]
   private ?string $gruppo = '';

@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['N', 'C', 'R'], strict: true, message: 'field.choice')]
   private string $tipoGruppo = 'N';

@@ @@
   /**
    * @var string|null $argomento Argomento della lezione
    */
-  #[ORM\Column(type: 'text', nullable: true)]
+  #[ORM\Column(type: Types::TEXT, nullable: true)]
   private ?string $argomento = '';

   /**
    * @var string|null $attivita Attività della lezione
    */
-  #[ORM\Column(type: 'text', nullable: true)]
+  #[ORM\Column(type: Types::TEXT, nullable: true)]
   private ?string $attivita = '';
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


18) src/Entity/ListaDestinatari.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\ListaDestinatariRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
   /**
    * @var bool $dsga Indica se il DSGA è fra i destinatari [FALSE=no, TRUE=si]
    */
-  #[ORM\Column(type: 'boolean', nullable: false)]
+  #[ORM\Column(type: Types::BOOLEAN, nullable: false)]
   private bool $dsga = false;

   /**
    * @var bool $ata Indica se il personale ATA è fra i destinatari [FALSE=no, TRUE=si]
    */
-  #[ORM\Column(type: 'boolean', nullable: false)]
+  #[ORM\Column(type: Types::BOOLEAN, nullable: false)]
   private bool $ata = false;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['N', 'T', 'C', 'M', 'U'], strict: true, message: 'field.choice')]
   private ?string $docenti = 'N';

@@ @@
   /**
    * @var array|null $filtroDocenti Lista dei filtri per i docenti
    */
-  #[ORM\Column(name: 'filtro_docenti', type: 'simple_array', nullable: true)]
+  #[ORM\Column(name: 'filtro_docenti', type: Types::SIMPLE_ARRAY, nullable: true)]
   private ?array $filtroDocenti = [];

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['N', 'T', 'C'], strict: true, message: 'field.choice')]
   private ?string $coordinatori = 'N';

@@ @@
   /**
    * @var array|null $filtroCoordinatori Lista dei filtri per i coordinatori
    */
-  #[ORM\Column(name: 'filtro_coordinatori', type: 'simple_array', nullable: true)]
+  #[ORM\Column(name: 'filtro_coordinatori', type: Types::SIMPLE_ARRAY, nullable: true)]
   private ?array $filtroCoordinatori = [];

   /**
    * @var bool $staff Indica se lo staff è fra i destinatari [FALSE=no, TRUE=si]
    */
-  #[ORM\Column(type: 'boolean', nullable: false)]
+  #[ORM\Column(type: Types::BOOLEAN, nullable: false)]
   private bool $staff = false;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['N', 'T', 'C', 'U'], strict: true, message: 'field.choice')]
   private ?string $genitori = 'N';

@@ @@
   /**
    * @var array $filtroGenitori Lista dei filtri per i genitori
    */
-  #[ORM\Column(name: 'filtro_genitori', type: 'simple_array', nullable: true)]
+  #[ORM\Column(name: 'filtro_genitori', type: Types::SIMPLE_ARRAY, nullable: true)]
   private ?array $filtroGenitori = [];

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['N', 'T', 'C', 'U'], strict: true, message: 'field.choice')]
   private ?string $alunni = 'N';

@@ @@
   /**
    * @var array $filtroAlunni Lista dei filtri per gli alunni
    */
-  #[ORM\Column(name: 'filtro_alunni', type: 'simple_array', nullable: true)]
+  #[ORM\Column(name: 'filtro_alunni', type: Types::SIMPLE_ARRAY, nullable: true)]
   private ?array $filtroAlunni = [];
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


19) src/Entity/ListaDestinatariClasse.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\ListaDestinatariClasseRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
   private ?Classe $classe = null;

   /**
-   * @var DateTime|null $letto Data e ora di lettura dell'avviso/circolare/documento
+   * @var DateTimeInterface|null $letto Data e ora di lettura dell'avviso/circolare/documento
    */
-  #[ORM\Column(type: 'datetime', nullable: true)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: true)]
   private ?DateTime $letto = null;

   /**
-   * @var DateTime|null $firmato Data e ora di firma per presa visione dell'avviso/circolare/documento
+   * @var DateTimeInterface|null $firmato Data e ora di firma per presa visione dell'avviso/circolare/documento
    */
-  #[ORM\Column(type: 'datetime', nullable: true)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: true)]
   private ?DateTime $firmato = null;
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


20) src/Entity/ListaDestinatariUtente.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\ListaDestinatariUtenteRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
   private ?Utente $utente = null;

   /**
-   * @var DateTime|null $letto Data e ora di lettura dell'avviso/circolare/documento
+   * @var DateTimeInterface|null $letto Data e ora di lettura dell'avviso/circolare/documento
    */
-  #[ORM\Column(type: 'datetime', nullable: true)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: true)]
   private ?DateTime $letto = null;

   /**
-   * @var DateTime|null $confermata Data e ora di firma per presa visione dell'avviso/circolare/documento
+   * @var DateTimeInterface|null $confermata Data e ora di firma per presa visione dell'avviso/circolare/documento
    */
-  #[ORM\Column(type: 'datetime', nullable: true)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: true)]
   private ?DateTime $firmato = null;
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


21) src/Entity/Log.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\LogRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per il log
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 255, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 255, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
   private ?string $username = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 32, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 32, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 32, maxMessage: 'field.maxlength')]
   private ?string $ruolo = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 255, nullable: true)]
+  #[ORM\Column(type: Types::STRING, length: 255, nullable: true)]
   #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
   private ?string $alias = '';

@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 64, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 64, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 64, maxMessage: 'field.maxlength')]
   private ?string $ip = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 255, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 255, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
   private ?string $origine = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['A', 'C', 'U', 'D'], strict: true, message: 'field.choice')]
   private ?string $tipo = 'A';

@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 32, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 32, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 32, maxMessage: 'field.maxlength')]
   private ?string $categoria = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 64, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 64, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 64, maxMessage: 'field.maxlength')]
   private ?string $azione = '';
@@ @@
   /**
    * @var array|null $dati Lista di dati da memorizzare nel log
    */
-  #[ORM\Column(type: 'array', nullable: true)]
+  #[ORM\Column(type: Types::ARRAY, nullable: true)]
   private ?array $dati = [];
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


22) src/Entity/Materia.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\MateriaRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per la materia
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 128, unique: true, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 128, unique: true, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 128, maxMessage: 'field.maxlength')]
   private ?string $nome = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(name: 'nome_breve', type: 'string', length: 32, nullable: false)]
+  #[ORM\Column(name: 'nome_breve', type: Types::STRING, length: 32, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 32, maxMessage: 'field.maxlength')]
   private ?string $nomeBreve = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['N', 'R', 'S', 'C', 'E', 'U'], strict: true, message: 'field.choice')]
   private ?string $tipo = 'N';

@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['N', 'G', 'A'], strict: true, message: 'field.choice')]
   private ?string $valutazione = 'N';

@@ @@
   /**
    * @var bool $media Indica se la materia entra nel calcolo della media dei voti o no
    */
-  #[ORM\Column(type: 'boolean', nullable: false)]
+  #[ORM\Column(type: Types::BOOLEAN, nullable: false)]
   private bool $media = true;

   /**
    * @var int $ordinamento Numero d'ordine per la visualizzazione della materia
    */
-  #[ORM\Column(type: 'smallint', nullable: false)]
+  #[ORM\Column(type: Types::SMALLINT, nullable: false)]
   private int $ordinamento = 0;
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


23) src/Entity/Menu.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\MenuRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 32, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 32, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 32, maxMessage: 'field.maxlength')]
   private ?string $selettore = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 64, nullable: true)]
+  #[ORM\Column(type: Types::STRING, length: 64, nullable: true)]
   #[Assert\Length(max: 64, maxMessage: 'field.maxlength')]
   private ?string $nome = '';

@@ @@
     *
     *
     */
-   #[ORM\Column(type: 'string', length: 255, nullable: true)]
+   #[ORM\Column(type: Types::STRING, length: 255, nullable: true)]
    #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
    private ?string $descrizione = '';

@@ @@
   /**
     * @var bool $mega Indica se utilizza la modalità mega menu
     */
-   #[ORM\Column(type: 'boolean', nullable: false)]
+   #[ORM\Column(type: Types::BOOLEAN, nullable: false)]
    private bool $mega = false;

   /**
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


24) src/Entity/MenuOpzione.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\MenuOpzioneRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 32, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 32, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 32, maxMessage: 'field.maxlength')]
   private ?string $ruolo = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 32, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 32, nullable: false)]
   #[Assert\Length(max: 32, maxMessage: 'field.maxlength')]
   private ?string $funzione = '';

@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 64, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 64, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 64, maxMessage: 'field.maxlength')]
   private ?string $nome = '';
@@ @@
     *
     *
     */
-   #[ORM\Column(type: 'string', length: 255, nullable: false)]
+   #[ORM\Column(type: Types::STRING, length: 255, nullable: false)]
    #[Assert\NotBlank(message: 'field.notblank')]
    #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
    private ?string $descrizione = '';
@@ @@
     *
     *
     */
-   #[ORM\Column(type: 'string', length: 255, nullable: true)]
+   #[ORM\Column(type: Types::STRING, length: 255, nullable: true)]
    #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
    private ?string $url = '';

@@ @@
   /**
    * @var int $ordinamento Numero d'ordine per la visualizzazione dell'opzione
    */
-  #[ORM\Column(type: 'smallint', nullable: false)]
+  #[ORM\Column(type: Types::SMALLINT, nullable: false)]
   private int $ordinamento = 0;

   /**
     * @var bool $abilitato Indica se l'opzione è abilitata o meno
     */
-   #[ORM\Column(type: 'boolean', nullable: false)]
+   #[ORM\Column(type: Types::BOOLEAN, nullable: false)]
    private bool $abilitato = true;

   /**
@@ @@
     *
     *
     */
-   #[ORM\Column(type: 'string', length: 64, nullable: true)]
+   #[ORM\Column(type: Types::STRING, length: 64, nullable: true)]
    #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
    private ?string $icona = '';
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


25) src/Entity/Nota.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\NotaRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per la nota
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['C', 'I'], strict: true, message: 'field.choice')]
   private ?string $tipo = 'C';

   /**
-   * @var DateTime|null $data Data della nota
-   *
+   * @var DateTimeInterface|null $data Data della nota
    */
-  #[ORM\Column(type: 'date', nullable: false)]
+  #[ORM\Column(type: Types::DATE_MUTABLE, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $data = null;
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'text', nullable: false)]
+  #[ORM\Column(type: Types::TEXT, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   private ?string $testo = '';

@@ @@
   /**
    * @var string|null $provvedimento Provvedimento disciplinare preso per la nota
    */
-  #[ORM\Column(type: 'text', nullable: true)]
+  #[ORM\Column(type: Types::TEXT, nullable: true)]
   private ?string $provvedimento = '';

   /**
-   * @var DateTime|null $annullata Data di annullamento della nota (null se è valida)
+   * @var DateTimeInterface|null $annullata Data di annullamento della nota (null se è valida)
    */
-  #[ORM\Column(type: 'date', nullable: true)]
+  #[ORM\Column(type: Types::DATE_MUTABLE, nullable: true)]
   private ?DateTime $annullata = null;

   /**
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


26) src/Entity/Orario.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\OrarioRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per l'orario
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 64, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 64, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 64, maxMessage: 'field.maxlength')]
   private ?string $nome = '';

   /**
-   * @var DateTime|null $inizio Data iniziale dell'entrata in vigore dell'orario
-   *
+   * @var DateTimeInterface|null $inizio Data iniziale dell'entrata in vigore dell'orario
    */
-  #[ORM\Column(type: 'date', nullable: false)]
+  #[ORM\Column(type: Types::DATE_MUTABLE, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   private ?DateTime $inizio = null;

   /**
-   * @var DateTime|null $fine Data finale dell'entrata in vigore dell'orario
-   *
+   * @var DateTimeInterface|null $fine Data finale dell'entrata in vigore dell'orario
    */
-  #[ORM\Column(type: 'date', nullable: false)]
+  #[ORM\Column(type: Types::DATE_MUTABLE, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   private ?DateTime $fine = null;
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


27) src/Entity/OrarioDocente.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\OrarioDocenteRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per l'orario del docente
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'smallint', nullable: false)]
+  #[ORM\Column(type: Types::SMALLINT, nullable: false)]
   #[Assert\Choice(choices: [0, 1, 2, 3, 4, 5, 6], strict: true, message: 'field.choice')]
   private int $giorno = 0;

@@ @@
   /**
    * @var int $ora Numero dell'ora di lezione [1,2,...]
    */
-  #[ORM\Column(type: 'smallint', nullable: false)]
+  #[ORM\Column(type: Types::SMALLINT, nullable: false)]
   private int $ora = 0;

   /**
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


28) src/Entity/OsservazioneClasse.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\OsservazioneClasseRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per l'osservazione
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
-   * @var DateTime $data Data dell'osservazione
-   *
+   * @var DateTimeInterface $data Data dell'osservazione
    */
-  #[ORM\Column(type: 'date', nullable: false)]
+  #[ORM\Column(type: Types::DATE_MUTABLE, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $data = null;
@@ @@
   /**
    * @var string|null $testo Testo dell'osservazione
    */
-  #[ORM\Column(type: 'text', nullable: false)]
+  #[ORM\Column(type: Types::TEXT, nullable: false)]
   private ?string $testo = '';

   /**
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


29) src/Entity/Presenza.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\PresenzaRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
-   * @var DateTime|null $data Data del giorno di presenza fuori classe
-   *
+   * @var DateTimeInterface|null $data Data del giorno di presenza fuori classe
    */
-  #[ORM\Column(type: 'date', nullable: false)]
+  #[ORM\Column(type: Types::DATE_MUTABLE, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $data = null;

   /**
-   * @var DateTime|null $oraInizio Ora di inizio della presenza fuori classe
-   *
+   * @var DateTimeInterface|null $oraInizio Ora di inizio della presenza fuori classe
    */
-  #[ORM\Column(type: 'time', nullable: true)]
+  #[ORM\Column(type: Types::TIME_MUTABLE, nullable: true)]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $oraInizio = null;

   /**
-   * @var DateTime|null $oraFine Ora della fine della presenza fuori classe
-   *
+   * @var DateTimeInterface|null $oraFine Ora della fine della presenza fuori classe
    */
-  #[ORM\Column(type: 'time', nullable: true)]
+  #[ORM\Column(type: Types::TIME_MUTABLE, nullable: true)]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $oraFine = null;

@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['P', 'M', 'S', 'E'], strict: true, message: 'field.choice')]
   private string $tipo = 'S';

@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 255, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 255, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
   private string $descrizione = '';
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


30) src/Entity/PropostaVoto.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\PropostaVotoRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per la proposta di voto
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['P', 'S', 'F', 'G', 'R', 'X'], strict: true, message: 'field.choice')]
   private ?string $periodo = 'P';

@@ @@
   /**
    * @var int|null $orale Proposta di voto per la valutazione orale
    */
-  #[ORM\Column(type: 'integer', nullable: true)]
+  #[ORM\Column(type: Types::INTEGER, nullable: true)]
   private ?int $orale = null;

   /**
    * @var int|null $scritto Proposta di voto per la valutazione scritta
    */
-  #[ORM\Column(type: 'integer', nullable: true)]
+  #[ORM\Column(type: Types::INTEGER, nullable: true)]
   private ?int $scritto = null;

   /**
    * @var int|null $pratico Proposta di voto per la valutazione pratica
    */
-  #[ORM\Column(type: 'integer', nullable: true)]
+  #[ORM\Column(type: Types::INTEGER, nullable: true)]
   private ?int $pratico = null;

   /**
    * @var int|null $unico Proposta di voto per la valutazione unica
    */
-  #[ORM\Column(type: 'integer', nullable: true)]
+  #[ORM\Column(type: Types::INTEGER, nullable: true)]
   private ?int $unico = null;

   /**
    * @var string|null $debito Argomenti per il recupero del debito
    */
-  #[ORM\Column(type: 'text', nullable: true)]
+  #[ORM\Column(type: Types::TEXT, nullable: true)]
   private ?string $debito = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: true)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: true)]
   #[Assert\Choice(choices: ['A', 'C', 'S', 'P', 'I'], strict: true, message: 'field.choice')]
   private ?string $recupero = null;

@@ @@
   /**
    * @var int|null $assenze Numero di ore di assenza nel periodo
    */
-  #[ORM\Column(type: 'integer', nullable: true)]
+  #[ORM\Column(type: Types::INTEGER, nullable: true)]
   private ?int $assenze = 0;

   /**
    * @var array|null $dati Lista dei dati aggiuntivi
    */
-  #[ORM\Column(type: 'array', nullable: true)]
+  #[ORM\Column(type: Types::ARRAY, nullable: true)]
   private ?array $dati = [];

   /**
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


31) src/Entity/Provisioning.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\ProvisioningRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per le istanze della classe
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
   /**
    * @var array|null $dati Lista dei dati necessari per il provisioning
    */
-  #[ORM\Column(type: 'array', nullable: true)]
+  #[ORM\Column(type: Types::ARRAY, nullable: true)]
   private ?array $dati = [];

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 255, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 255, nullable: false)]
   #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
   private ?string $funzione = '';

@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['A', 'P', 'C', 'E'], strict: true, message: 'field.choice')]
   private ?string $stato = 'A';
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


32) src/Entity/Raggruppamento.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\RaggruppamentoRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 64, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 64, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 64, maxMessage: 'field.maxlength')]
   private string $nome = '';
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


33) src/Entity/Richiesta.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\RichiestaRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificatore univoco
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
-   * @var DateTime|null $inviata Data e ora dell'invio della richiesta
-   *
+   * @var DateTimeInterface|null $inviata Data e ora dell'invio della richiesta
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   private ?DateTime $inviata = null;

   /**
-   * @var DateTime|null $gestita Data e ora della gestione della richiesta, o null se non ancora gestita
+   * @var DateTimeInterface|null $gestita Data e ora della gestione della richiesta, o null se non ancora gestita
    */
-  #[ORM\Column(type: 'datetime', nullable: true)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: true)]
   private ?DateTime $gestita = null;

   /**
-   * @var DateTime|null $data Data della richiesta (solo per le richieste multiple)
+   * @var DateTimeInterface|null $data Data della richiesta (solo per le richieste multiple)
    */
-  #[ORM\Column(type: 'date', nullable: true)]
+  #[ORM\Column(type: Types::DATE_MUTABLE, nullable: true)]
   private ?DateTime $data = null;

   /**
    * @var array $valori Lista dei valori per i campi da compilare nel modulo: nome1 => valore1, nome2 => valore2...
    */
-  #[ORM\Column(type: 'array', nullable: false)]
+  #[ORM\Column(type: Types::ARRAY, nullable: false)]
   private array $valori = [];

   /**
    * @var string $documento Percorso del file del documento generato dalla richiesta
    */
-  #[ORM\Column(type: 'string', length: 255, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 255, nullable: false)]
   private string $documento = '';

   /**
    * @var array $allegati Lista dei percorsi dei file allegati
    */
-  #[ORM\Column(type: 'array', nullable: false)]
+  #[ORM\Column(type: Types::ARRAY, nullable: false)]
   private array $allegati = [];

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['I', 'G', 'A', 'C'], strict: true, message: 'field.choice')]
   private string $stato = '';

@@ @@
   /**
    * @var string $messaggio Eventuale messaggio da mostrare al richiedente
    */
-  #[ORM\Column(type: 'text', nullable: false)]
+  #[ORM\Column(type: Types::TEXT, nullable: false)]
   private string $messaggio = '';

   /**
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


34) src/Entity/RichiestaColloquio.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\RichiestaColloquioRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per la richiesta del colloquio
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
-   * @var DateTime|null $appuntamento Ora di inizio del colloquio
-   *
+   * @var DateTimeInterface|null $appuntamento Ora di inizio del colloquio
    */
-  #[ORM\Column(type: 'time', nullable: false)]
+  #[ORM\Column(type: Types::TIME_MUTABLE, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $appuntamento = null;
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['R', 'A', 'C', 'N'], strict: true, message: 'field.choice')]
   private ?string $stato = 'R';

@@ @@
   /**
    * @var string|null $messaggio Messaggio da comunicare relativamente allo stato della richiesta
    */
-  #[ORM\Column(type: 'text', nullable: true)]
+  #[ORM\Column(type: Types::TEXT, nullable: true)]
   private ?string $messaggio = '';
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


35) src/Entity/ScansioneOraria.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\ScansioneOrariaRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per la scansione oraria
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'smallint', nullable: false)]
+  #[ORM\Column(type: Types::SMALLINT, nullable: false)]
   #[Assert\Choice(choices: [0, 1, 2, 3, 4, 5, 6], strict: true, message: 'field.choice')]
   private int $giorno = 0;

@@ @@
   /**
    * @var int $ora Numero dell'ora di lezione [1,2,...]
    */
-  #[ORM\Column(type: 'smallint', nullable: false)]
+  #[ORM\Column(type: Types::SMALLINT, nullable: false)]
   private int $ora = 1;

   /**
-   * @var DateTime|null $inizio Inizio dell'ora di lezione
-   *
+   * @var DateTimeInterface|null $inizio Inizio dell'ora di lezione
    */
-  #[ORM\Column(type: 'time', nullable: false)]
+  #[ORM\Column(type: Types::TIME_MUTABLE, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $inizio = null;

   /**
-   * @var DateTime|null $fine Fine dell'ora di lezione
-   *
+   * @var DateTimeInterface|null $fine Fine dell'ora di lezione
    */
-  #[ORM\Column(type: 'time', nullable: false)]
+  #[ORM\Column(type: Types::TIME_MUTABLE, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $fine = null;
@@ @@
   /**
    * @var float $durata Durata dell'ora di lezione (intesa come unità oraria)
    */
-  #[ORM\Column(type: 'float', nullable: false)]
+  #[ORM\Column(type: Types::FLOAT, nullable: false)]
   private float $durata = 1.0;

   /**
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


36) src/Entity/Scrutinio.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\ScrutinioRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per lo scrutinio
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['P', 'S', 'F', 'G', 'R', 'X'], strict: true, message: 'field.choice')]
   private ?string $periodo = 'P';

   /**
-   * @var DateTime|null $data Data dello scrutinio
-   *
+   * @var DateTimeInterface|null $data Data dello scrutinio
    */
-  #[ORM\Column(type: 'date', nullable: true)]
+  #[ORM\Column(type: Types::DATE_MUTABLE, nullable: true)]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $data = null;

   /**
-   * @var DateTime|null $inizio Ora dell'apertura dello scrutinio
-   *
+   * @var DateTimeInterface|null $inizio Ora dell'apertura dello scrutinio
    */
-  #[ORM\Column(type: 'time', nullable: true)]
+  #[ORM\Column(type: Types::TIME_MUTABLE, nullable: true)]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $inizio = null;

   /**
-   * @var DateTime|null $fine Ora della chiusura dello scrutinio
-   *
+   * @var DateTimeInterface|null $fine Ora della chiusura dello scrutinio
    */
-  #[ORM\Column(type: 'time', nullable: true)]
+  #[ORM\Column(type: Types::TIME_MUTABLE, nullable: true)]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $fine = null;

@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['N', 'C', '1', '2', '3', '4', '5', '6', '7', '8', '9'], strict: true, message: 'field.choice')]
   private ?string $stato = 'N';

@@ @@
   /**
    * @var array|null $dati Lista dei dati dello scrutinio
    */
-  #[ORM\Column(type: 'array', nullable: true)]
+  #[ORM\Column(type: Types::ARRAY, nullable: true)]
   private ?array $dati = [];

   /**
-   * @var DateTime|null $visibile Data e ora della pubblicazione dell'esito dello scrutinio ai genitori
-   *
+   * @var DateTimeInterface|null $visibile Data e ora della pubblicazione dell'esito dello scrutinio ai genitori
    */
-  #[ORM\Column(type: 'datetime', nullable: true)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: true)]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $visibile = null;

@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: true)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: true)]
   #[Assert\Choice(choices: ['E', 'C', 'V', 'B'], strict: true, message: 'field.choice')]
   private ?string $sincronizzazione = '';
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


37) src/Entity/Sede.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\SedeRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per la sede
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 128, unique: true, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 128, unique: true, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 128, maxMessage: 'field.maxlength')]
   private ?string $nome = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(name: 'nome_breve', type: 'string', length: 32, unique: true, nullable: false)]
+  #[ORM\Column(name: 'nome_breve', type: Types::STRING, length: 32, unique: true, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 32, maxMessage: 'field.maxlength')]
   private ?string $nomeBreve = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 32, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 32, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 32, maxMessage: 'field.maxlength')]
   private ?string $citta = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 64, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 64, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 64, maxMessage: 'field.maxlength')]
   private ?string $indirizzo1 = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 64, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 64, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 64, maxMessage: 'field.maxlength')]
   private ?string $indirizzo2 = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 32, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 32, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 32, maxMessage: 'field.maxlength')]
   #[Assert\Regex(pattern: '/^\+?[0-9\(][0-9\.\-\(\) ]*[0-9]$/', message: 'field.phone')]
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'smallint', nullable: false)]
+  #[ORM\Column(type: Types::SMALLINT, nullable: false)]
   #[Assert\PositiveOrZero(message: 'field.zeropositive')]
   private int $ordinamento = 0;
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


38) src/Entity/Spid.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\SpidRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per le istanze della classe
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 255, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 255, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
   private ?string $idp = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(name: 'response_id', type: 'string', length: 255, unique: true, nullable: false)]
+  #[ORM\Column(name: 'response_id', type: Types::STRING, length: 255, unique: true, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
   private ?string $responseId = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(name: 'attr_name', type: 'string', length: 255, nullable: false)]
+  #[ORM\Column(name: 'attr_name', type: Types::STRING, length: 255, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
   private ?string $attrName = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(name: 'attr_family_name', type: 'string', length: 255, nullable: false)]
+  #[ORM\Column(name: 'attr_family_name', type: Types::STRING, length: 255, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
   private ?string $attrFamilyName = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(name: 'attr_fiscal_number', type: 'string', length: 32, nullable: false)]
+  #[ORM\Column(name: 'attr_fiscal_number', type: Types::STRING, length: 32, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 32, maxMessage: 'field.maxlength')]
   private ?string $attrFiscalNumber = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(name: 'logout_url', type: 'string', length: 255, nullable: false)]
+  #[ORM\Column(name: 'logout_url', type: Types::STRING, length: 255, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
   private ?string $logoutUrl = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['A', 'L', 'E'], strict: true, message: 'field.choice')]
   private ?string $state = 'A';
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


39) src/Entity/StoricoEsito.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\StoricoEsitoRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per l'esito
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 255, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 255, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   private ?string $classe = '';

@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['A', 'N', 'R', 'L', 'E'], strict: true, message: 'field.choice')]
   private ?string $esito = 'A';

@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['F', 'G', 'X'], strict: true, message: 'field.choice')]
   private ?string $periodo = 'F';

@@ @@
   /**
    * @var float|null $media Media dei voti
    */
-  #[ORM\Column(type: 'float', nullable: true)]
+  #[ORM\Column(type: Types::FLOAT, nullable: true)]
   private ?float $media = 0;

   /**
    * @var int|null $credito Punteggio di credito
    */
-  #[ORM\Column(type: 'integer', nullable: true)]
+  #[ORM\Column(type: Types::INTEGER, nullable: true)]
   private ?int $credito = 0;

   /**
    * @var int|null $creditoPrecedente Punteggio di credito degli anni precedenti
    */
-  #[ORM\Column(name: 'credito_precedente', type: 'integer', nullable: true)]
+  #[ORM\Column(name: 'credito_precedente', type: Types::INTEGER, nullable: true)]
   private ?int $creditoPrecedente = 0;

   /**
@@ @@
   /**
    * @var array|null $dati Lista dei dati dello scrutinio
    */
-  #[ORM\Column(type: 'array', nullable: true)]
+  #[ORM\Column(type: Types::ARRAY, nullable: true)]
   private ?array $dati = [];
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


40) src/Entity/StoricoVoto.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\StoricoVotoRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per il voto assegnato allo scrutinio
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
    * @var int $voto Valutazione della materia
    */
-  #[ORM\Column(type: 'integer', nullable: false)]
+  #[ORM\Column(type: Types::INTEGER, nullable: false)]
   private int $voto = 0;

   /**
    * @var string|null $carenze Carenze segnalate allo scrutinio finale
    */
-  #[ORM\Column(type: 'text', nullable: true)]
+  #[ORM\Column(type: Types::TEXT, nullable: true)]
   private ?string $carenze = '';

   /**
@@ @@
    * @var array|null $dati Dati aggiuntivi sulla valutazione
    *|null
    */
-  #[ORM\Column(type: 'array', nullable: true)]
+  #[ORM\Column(type: Types::ARRAY, nullable: true)]
   private ?array $dati = [];

   /**
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


41) src/Entity/Uscita.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\UscitaRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per l'uscita anticipata
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
-   * @var DateTime|null $data Data dell'uscita anticipata
-   *
+   * @var DateTimeInterface|null $data Data dell'uscita anticipata
    */
-  #[ORM\Column(type: 'date', nullable: false)]
+  #[ORM\Column(type: Types::DATE_MUTABLE, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $data = null;

   /**
-   * @var DateTime|null $ora Ora dell'uscita anticipata
-   *
+   * @var DateTimeInterface|null $ora Ora dell'uscita anticipata
    */
-  #[ORM\Column(type: 'time', nullable: false)]
+  #[ORM\Column(type: Types::TIME_MUTABLE, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $ora = null;
@@ @@
   /**
    * @var string|null $note Note informative sull'uscita anticipata
    */
-  #[ORM\Column(type: 'text', nullable: true)]
+  #[ORM\Column(type: Types::TEXT, nullable: true)]
   private ?string $note = '';

   /**
    * @var bool $valido Indica se l'uscita è valida per il conteggio del numero massimo di uscite a disposizione
    */
-  #[ORM\Column(name: 'valido', type: 'boolean', nullable: false)]
+  #[ORM\Column(name: 'valido', type: Types::BOOLEAN, nullable: false)]
   private bool $valido = false;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1024, nullable: true)]
+  #[ORM\Column(type: Types::STRING, length: 1024, nullable: true)]
   #[Assert\Length(max: 1024, maxMessage: 'field.maxlength')]
   private ?string $motivazione = '';

   /**
-   * @var DateTime|null $giustificato Data della giustificazione
-   *
+   * @var DateTimeInterface|null $giustificato Data della giustificazione
    */
-  #[ORM\Column(type: 'date', nullable: true)]
+  #[ORM\Column(type: Types::DATE_MUTABLE, nullable: true)]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $giustificato = null;
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


42) src/Entity/Utente.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\UtenteRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per il generico utente
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 128, unique: true, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 128, unique: true, nullable: false)]
   #[Assert\Length(min: 3, max: 128, minMessage: 'field.minlength', maxMessage: 'field.maxlength')]
   #[Assert\Regex(pattern: '/^[a-zA-Z][a-zA-Z0-9\._\-]*[a-zA-Z0-9]$/', message: 'field.regex')]
   private ?string $username = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 255, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 255, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   private ?string $password = '';

@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 255, unique: true, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 255, unique: true, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
   #[Assert\Email(message: 'field.email')]
@@ @@
   /**
    * @var string|null $token Token generato per la procedura di attivazione o di recupero password
    */
-  #[ORM\Column(type: 'string', length: 255, nullable: true)]
+  #[ORM\Column(type: Types::STRING, length: 255, nullable: true)]
   private ?string $token = '';

   /**
-   * @var DateTime|null $tokenCreato Data/ora di creazione del token
+   * @var DateTimeInterface|null $tokenCreato Data/ora di creazione del token
    */
-  #[ORM\Column(name: 'token_creato', type: 'datetime', nullable: true)]
+  #[ORM\Column(name: 'token_creato', type: Types::DATETIME_MUTABLE, nullable: true)]
   private ?DateTime $tokenCreato = null;

   /**
    * @var string|null $prelogin Codice di pre-login
    */
-  #[ORM\Column(type: 'string', length: 255, nullable: true)]
+  #[ORM\Column(type: Types::STRING, length: 255, nullable: true)]
   private ?string $prelogin = '';

   /**
-   * @var DateTime|null $preloginCreato Data/ora di creazione del codice di pre-login
+   * @var DateTimeInterface|null $preloginCreato Data/ora di creazione del codice di pre-login
    */
-  #[ORM\Column(name: 'prelogin_creato', type: 'datetime', nullable: true)]
+  #[ORM\Column(name: 'prelogin_creato', type: Types::DATETIME_MUTABLE, nullable: true)]
   private ?DateTime $preloginCreato = null;

   /**
    * @var bool $abilitato Indica se l'utente è abilitato al login o no
    */
-  #[ORM\Column(type: 'boolean', nullable: false)]
+  #[ORM\Column(type: Types::BOOLEAN, nullable: false)]
   private bool $abilitato = false;

   /**
    * @var bool $spid Indica se l'utente è abilitato all'accesso SPID
    */
-  #[ORM\Column(type: 'boolean', nullable: false)]
+  #[ORM\Column(type: Types::BOOLEAN, nullable: false)]
   private bool $spid = false;

   /**
-   * @var DateTime|null $ultimoAccesso Data/ora dell'ultimo accesso
+   * @var DateTimeInterface|null $ultimoAccesso Data/ora dell'ultimo accesso
    */
-  #[ORM\Column(name: 'ultimo_accesso', type: 'datetime', nullable: true)]
+  #[ORM\Column(name: 'ultimo_accesso', type: Types::DATETIME_MUTABLE, nullable: true)]
   private ?DateTime $ultimoAccesso = null;

   /**
    * @var string|null $otp Codice segreto per accesso con OTP (se vuoto non è attivato)
    */
-  #[ORM\Column(type: 'string', length: 128, nullable: true)]
+  #[ORM\Column(type: Types::STRING, length: 128, nullable: true)]
   private ?string $otp = '';

   /**
    * @var string|null $ultimoOtp Codice OTP usato l'ultima volta (per evitare replay attack)
    */
-  #[ORM\Column(name: 'ultimo_otp', type: 'string', length: 128, nullable: true)]
+  #[ORM\Column(name: 'ultimo_otp', type: Types::STRING, length: 128, nullable: true)]
   private ?string $ultimoOtp = '';

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 64, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 64, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 64, maxMessage: 'field.maxlength')]
   private ?string $nome = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 64, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 64, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 64, maxMessage: 'field.maxlength')]
   private ?string $cognome = '';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['M', 'F'], strict: true, message: 'field.choice')]
   private ?string $sesso = 'M';

   /**
-   * @var DateTime|null $dataNascita Data di nascita dell'utente
-   *
+   * @var DateTimeInterface|null $dataNascita Data di nascita dell'utente
    */
-  #[ORM\Column(name: 'data_nascita', type: 'date', nullable: true)]
+  #[ORM\Column(name: 'data_nascita', type: Types::DATE_MUTABLE, nullable: true)]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $dataNascita = null;

@@ @@
    *
    *
    */
-  #[ORM\Column(name: 'comune_nascita', type: 'string', length: 64, nullable: true)]
+  #[ORM\Column(name: 'comune_nascita', type: Types::STRING, length: 64, nullable: true)]
   #[Assert\Length(max: 64, maxMessage: 'field.maxlength')]
   private ?string $comuneNascita = '';

@@ @@
    *
    *
    */
-  #[ORM\Column(name: 'provincia_nascita', type: 'string', length: 2, nullable: true)]
+  #[ORM\Column(name: 'provincia_nascita', type: Types::STRING, length: 2, nullable: true)]
   #[Assert\Length(max: 2, maxMessage: 'field.maxlength')]
   private ?string $provinciaNascita = '';

@@ @@
    *
    *
    */
-  #[ORM\Column(name: 'codice_fiscale', type: 'string', length: 16, nullable: true)]
+  #[ORM\Column(name: 'codice_fiscale', type: Types::STRING, length: 16, nullable: true)]
   #[Assert\Length(max: 16, maxMessage: 'field.maxlength')]
   private ?string $codiceFiscale = '';

@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 32, nullable: true)]
+  #[ORM\Column(type: Types::STRING, length: 32, nullable: true)]
   #[Assert\Length(max: 32, maxMessage: 'field.maxlength')]
   private ?string $citta = '';

@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 2, nullable: true)]
+  #[ORM\Column(type: Types::STRING, length: 2, nullable: true)]
   #[Assert\Length(max: 2, maxMessage: 'field.maxlength')]
   private ?string $provincia = '';

@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 64, nullable: true)]
+  #[ORM\Column(type: Types::STRING, length: 64, nullable: true)]
   #[Assert\Length(max: 64, maxMessage: 'field.maxlength')]
   private ?string $indirizzo = '';

@@ @@
   /**
    * @var array|null $numeriTelefono Lista di numeri di telefono dell'utente
    */
-  #[ORM\Column(name: 'numeri_telefono', type: 'array', nullable: true)]
+  #[ORM\Column(name: 'numeri_telefono', type: Types::ARRAY, nullable: true)]
   private ?array $numeriTelefono = [];

   /**
    * @var array|null $notifica Lista di parametri di notifica per i servizi esterni
    */
-  #[ORM\Column(type: 'array', nullable: true)]
+  #[ORM\Column(type: Types::ARRAY, nullable: true)]
   private ?array $notifica = ['tipo' => 'email', 'abilitato' => ['circolare']];

   /**
    * @var array|null $rappresentante Indica se l'utente è eletto come rappresentante [C=di classe, I=di istituto, P=consulta provinciale, R=RSU]
    */
-  #[ORM\Column(type: 'simple_array', nullable: true)]
+  #[ORM\Column(type: Types::SIMPLE_ARRAY, nullable: true)]
   private ?array $rappresentante = [''];

   /**
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


43) src/Entity/Valutazione.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\ValutazioneRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per la lezione
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['S', 'O', 'P'], strict: true, message: 'field.choice')]
   private ?string $tipo = 'O';

@@ @@
   /**
    * @var bool $visibile Indica se la valutazione è visibile ai genitori o no
    */
-  #[ORM\Column(type: 'boolean', nullable: false)]
+  #[ORM\Column(type: Types::BOOLEAN, nullable: false)]
   private bool $visibile = true;

   /**
    * @var bool $media Indica se la valutazione entra nella media di riepilogo o no
    */
-  #[ORM\Column(type: 'boolean', nullable: false)]
+  #[ORM\Column(type: Types::BOOLEAN, nullable: false)]
   private bool $media = true;

   /**
    * @var float|null $voto Voto numerico della valutazione [0|null=non presente, 1, 1.25, 1.50, 1.75, 2, ...]
    */
-  #[ORM\Column(type: 'float', nullable: true)]
+  #[ORM\Column(type: Types::FLOAT, nullable: true)]
   private ?float $voto = null;

   /**
    * @var string|null $giudizio Giudizio della valutazione
    */
-  #[ORM\Column(type: 'text', nullable: true)]
+  #[ORM\Column(type: Types::TEXT, nullable: true)]
   private ?string $giudizio = null;

   /**
    * @var string|null $argomento Argomento relativo alla valutazione
    */
-  #[ORM\Column(type: 'text', nullable: true)]
+  #[ORM\Column(type: Types::TEXT, nullable: true)]
   private ?string $argomento = null;

   /**
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


44) src/Entity/VotoScrutinio.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\VotoScrutinioRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per il voto assegnato allo scrutinio
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
    * @var int|null $orale Voto per la valutazione orale
    */
-  #[ORM\Column(type: 'integer', nullable: true)]
+  #[ORM\Column(type: Types::INTEGER, nullable: true)]
   private ?int $orale = null;

   /**
    * @var int|null $scritto Voto per la valutazione scritta
    */
-  #[ORM\Column(type: 'integer', nullable: true)]
+  #[ORM\Column(type: Types::INTEGER, nullable: true)]
   private ?int $scritto = null;

   /**
    * @var int|null $pratico Voto per la valutazione pratica
    */
-  #[ORM\Column(type: 'integer', nullable: true)]
+  #[ORM\Column(type: Types::INTEGER, nullable: true)]
   private ?int $pratico = null;

   /**
    * @var int|null $unico Voto per la valutazione unica
    */
-  #[ORM\Column(type: 'integer', nullable: true)]
+  #[ORM\Column(type: Types::INTEGER, nullable: true)]
   private ?int $unico = null;

   /**
    * @var string|null $debito Argomenti per il recupero del debito
    */
-  #[ORM\Column(type: 'text', nullable: true)]
+  #[ORM\Column(type: Types::TEXT, nullable: true)]
   private ?string $debito = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: true)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: true)]
   #[Assert\Choice(choices: ['A', 'C', 'S', 'P', 'I', 'R', 'N'], strict: true, message: 'field.choice')]
   private ?string $recupero = null;

@@ @@
   /**
    * @var int $assenze Numero di ore di assenza nel periodo
    */
-  #[ORM\Column(type: 'integer', nullable: false)]
+  #[ORM\Column(type: Types::INTEGER, nullable: false)]
   private int $assenze = 0;

   /**
    * @var array|null $dati Lista dei dati sul voto (usati per la condotta)
    */
-  #[ORM\Column(type: 'array', nullable: true)]
+  #[ORM\Column(type: Types::ARRAY, nullable: true)]
   private ?array $dati = [];

   /**
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


45) src/Entity/Alunno.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
 use App\Repository\AlunnoRepository;
 use DateTime;
 use Doctrine\Common\Collections\ArrayCollection;
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['N', 'H', 'D', 'B'], strict: true, message: 'field.choice')]
   private ?string $bes = 'N';

@@ @@
   /**
    * @var string|null $noteBes Note sull'alunno BES
    */
-  #[ORM\Column(name: 'note_bes', type: 'text', nullable: true)]
+  #[ORM\Column(name: 'note_bes', type: Types::TEXT, nullable: true)]
   private ?string $noteBes = '';

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(name: 'autorizza_entrata', type: 'string', length: 2048, nullable: true)]
+  #[ORM\Column(name: 'autorizza_entrata', type: Types::STRING, length: 2048, nullable: true)]
   #[Assert\Length(max: 2048, maxMessage: 'field.maxlength')]
   private ?string $autorizzaEntrata = '';

@@ @@
    *
    *
    */
-  #[ORM\Column(name: 'autorizza_uscita', type: 'string', length: 2048, nullable: true)]
+  #[ORM\Column(name: 'autorizza_uscita', type: Types::STRING, length: 2048, nullable: true)]
   #[Assert\Length(max: 2048, maxMessage: 'field.maxlength')]
   private ?string $autorizzaUscita = '';

@@ @@
   /**
    * @var string|null $note Note sulle autorizzazioni
    */
-  #[ORM\Column(type: 'text', nullable: true)]
+  #[ORM\Column(type: Types::TEXT, nullable: true)]
   private ?string $note = '';

   /**
    * @var bool $frequenzaEstero Indica se l'alunno sta frequentando l'anno scolastico all'estero oppure no
    */
-  #[ORM\Column(name: 'frequenza_estero', type: 'boolean', nullable: false)]
+  #[ORM\Column(name: 'frequenza_estero', type: Types::BOOLEAN, nullable: false)]
   private bool $frequenzaEstero = false;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['S', 'U', 'I', 'D', 'A'], strict: true, message: 'field.choice')]
   private ?string $religione = 'S';

@@ @@
   /**
    * @var int $credito3 Punteggio di credito per la classe terza (se presente)
    */
-  #[ORM\Column(type: 'smallint', nullable: true)]
+  #[ORM\Column(type: Types::SMALLINT, nullable: true)]
   private ?int $credito3 = 0;

   /**
    * @var int $credito4 Punteggio di credito per la classe quarta (se presente)
    */
-  #[ORM\Column(type: 'smallint', nullable: true)]
+  #[ORM\Column(type: Types::SMALLINT, nullable: true)]
   private ?int $credito4 = 0;

   /**
    * @var bool $giustificaOnline Indica se l'alunno può effettuare la giustificazione online oppure no
    */
-  #[ORM\Column(name: 'giustifica_online', type: 'boolean', nullable: false)]
+  #[ORM\Column(name: 'giustifica_online', type: Types::BOOLEAN, nullable: false)]
   private bool $giustificaOnline = true;

   /**
    * @var bool $richiestaCertificato Indica se all'alunno è stata richiesta la consegna del certificato medico oppure no
    */
-  #[ORM\Column(name: 'richiesta_certificato', type: 'boolean', nullable: false)]
+  #[ORM\Column(name: 'richiesta_certificato', type: Types::BOOLEAN, nullable: false)]
   private bool $richiestaCertificato = false;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 255, nullable: true)]
+  #[ORM\Column(type: Types::STRING, length: 255, nullable: true)]
   #[Assert\Image(allowSquare: true, allowLandscape: false, allowPortrait: false, maxWidth: Alunno::FOTO_MAXSIZE, maxHeight: Alunno::FOTO_MAXSIZE, detectCorrupted: true, mimeTypesMessage: 'image.type', maxWidthMessage: 'image.width', maxHeightMessage: 'image.height', allowLandscapeMessage: 'image.notsquare', allowPortraitMessage: 'image.notsquare', corruptedMessage: 'image.corrupted')]
   private ?string $foto = '';
    ----------- end diff -----------

Applied rules:
 * AttributeKeyToClassConstFetchRector


46) src/Entity/Annotazione.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\AnnotazioneRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per l'annotazione
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
-   * @var DateTime $data Data della annotazione
-   *
+   * @var DateTimeInterface $data Data della annotazione
    */
-  #[ORM\Column(type: 'date', nullable: false)]
+  #[ORM\Column(type: Types::DATE_MUTABLE, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $data = null;
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'text', nullable: false)]
+  #[ORM\Column(type: Types::TEXT, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   private ?string $testo = '';

@@ @@
   /**
    * @var bool $visibile Indica se l'annotazione è visibile ai genitori o no
    */
-  #[ORM\Column(type: 'boolean', nullable: false)]
+  #[ORM\Column(type: Types::BOOLEAN, nullable: false)]
   private bool $visibile = false;

   /**
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


47) src/Entity/App.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\AppRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per le istanze della classe
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 255, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 255, nullable: false)]
   #[Assert\Length(min: 3, max: 255, minMessage: 'field.minlength', maxMessage: 'field.maxlength')]
   private ?string $nome = '';

@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 128, unique: true, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 128, unique: true, nullable: false)]
   #[Assert\Length(min: 16, max: 128, minMessage: 'field.minlength', maxMessage: 'field.maxlength')]
   private ?string $token = '';

@@ @@
   /**
    * @var bool $attiva Indica se l'app è attiva o no
    */
-  #[ORM\Column(type: 'boolean', nullable: false)]
+  #[ORM\Column(type: Types::BOOLEAN, nullable: false)]
   private bool $attiva = false;

   /**
    * @var bool $css Indica se l'app deve caricare un proprio CSS o no
    */
-  #[ORM\Column(type: 'boolean', nullable: false)]
+  #[ORM\Column(type: Types::BOOLEAN, nullable: false)]
   private bool $css = false;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['N', 'E', 'G', 'T'], strict: true, message: 'field.choice')]
   private ?string $notifica = '';

@@ @@
   /**
    * @var string|null $download Estensione del file da scaricare, o null se nessun file è previsto
    */
-  #[ORM\Column(type: 'string', length: 64, nullable: true)]
+  #[ORM\Column(type: Types::STRING, length: 64, nullable: true)]
   private ?string $download = '';

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 4, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 4, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   private ?string $abilitati = '';

@@ @@
   /**
    * @var array|null $dati Lista di dati aggiuntivi necessari per le funzionalità dell'app
    */
-  #[ORM\Column(type: 'array', nullable: true)]
+  #[ORM\Column(type: Types::ARRAY, nullable: true)]
   private ?array $dati = [];
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


48) src/Entity/Assenza.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\AssenzaRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per l'assenza
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
-   * @var DateTime|null $data Data dell'assenza
-   *
+   * @var DateTimeInterface|null $data Data dell'assenza
    */
-  #[ORM\Column(type: 'date', nullable: false)]
+  #[ORM\Column(type: Types::DATE_MUTABLE, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $data = null;

   /**
-   * @var DateTime|null $giustificato Data della giustificazione
-   *
+   * @var DateTimeInterface|null $giustificato Data della giustificazione
    */
-  #[ORM\Column(type: 'date', nullable: true)]
+  #[ORM\Column(type: Types::DATE_MUTABLE, nullable: true)]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $giustificato = null;

@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1024, nullable: true)]
+  #[ORM\Column(type: Types::STRING, length: 1024, nullable: true)]
   #[Assert\Length(max: 1024, maxMessage: 'field.maxlength')]
   private ?string $motivazione = '';

@@ @@
   /**
    * @var array|null $dichiarazione Informazioni sulla sottoscrizione della dichiarazione (quando necessaria)
    */
-  #[ORM\Column(type: 'array', nullable: true)]
+  #[ORM\Column(type: Types::ARRAY, nullable: true)]
   private ?array $dichiarazione = [];

   /**
    * @var array|null $certificati Lista di file allegati per i certificati medici
    */
-  #[ORM\Column(type: 'array', nullable: true)]
+  #[ORM\Column(type: Types::ARRAY, nullable: true)]
   private ?array $certificati = [];

   /**
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


49) src/Entity/AssenzaLezione.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\AssenzaLezioneRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per l'assenza della lezione
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
   /**
    * @var float $ore Ore di assenza dell'alunno alla lezione
    */
-  #[ORM\Column(type: 'float', nullable: false)]
+  #[ORM\Column(type: Types::FLOAT, nullable: false)]
   private float $ore = 0;
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


50) src/Entity/Ata.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
 use App\Repository\AtaRepository;
 use Doctrine\ORM\Mapping as ORM;
 use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['A', 'T', 'C', 'U', 'D'], strict: true, message: 'field.choice')]
   private ?string $tipo = 'A';

@@ @@
   /**
    * @var bool $segreteria Indica se il dipendente ATA ha accesso alle funzioni della segreteria
    */
-  #[ORM\Column(name: 'segreteria', type: 'boolean', nullable: false)]
+  #[ORM\Column(name: 'segreteria', type: Types::BOOLEAN, nullable: false)]
   private bool $segreteria = false;

   /**
    ----------- end diff -----------

Applied rules:
 * AttributeKeyToClassConstFetchRector


51) src/Entity/Avviso.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\AvvisoRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per l'avviso
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['U', 'E', 'V', 'P', 'A', 'I', 'C', 'D', 'O'], strict: true, message: 'field.choice')]
   private ?string $tipo = 'U';

@@ @@
   /**
    * @var int $anno Anno iniziale dell'A.S. a cui si riferisce l'avviso
    */
-  #[ORM\Column(type: 'integer', nullable: false)]
+  #[ORM\Column(type: Types::INTEGER, nullable: false)]
   private int $anno = 0;

   /**
-   * @var DateTime|null $data Data dell'evento associato all'avviso
-   *
+   * @var DateTimeInterface|null $data Data dell'evento associato all'avviso
    */
-  #[ORM\Column(type: 'date', nullable: false)]
+  #[ORM\Column(type: Types::DATE_MUTABLE, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $data = null;

   /**
-   * @var DateTime|null $ora Ora associata all'evento dell'avviso
-   *
+   * @var DateTimeInterface|null $ora Ora associata all'evento dell'avviso
    */
-  #[ORM\Column(type: 'time', nullable: true)]
+  #[ORM\Column(type: Types::TIME_MUTABLE, nullable: true)]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $ora = null;

   /**
-   * @var DateTime|null $oraFine Ora finale associata all'evento dell'avviso
-   *
+   * @var DateTimeInterface|null $oraFine Ora finale associata all'evento dell'avviso
    */
-  #[ORM\Column(name: 'ora_fine', type: 'time', nullable: true)]
+  #[ORM\Column(name: 'ora_fine', type: Types::TIME_MUTABLE, nullable: true)]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $oraFine = null;

@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 255, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 255, nullable: false)]
   #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
   private ?string $oggetto = '';

@@ @@
   /**
    * @var string|null $testo Testo dell'avviso
    */
-  #[ORM\Column(type: 'text', nullable: false)]
+  #[ORM\Column(type: Types::TEXT, nullable: false)]
   private ?string $testo = '';

   /**
    * @var array|null $allegati Lista di file allegati all'avviso
    */
-  #[ORM\Column(type: 'array', nullable: true)]
+  #[ORM\Column(type: Types::ARRAY, nullable: true)]
   private ?array $allegati = [];

   /**
     * @var array|null $destinatariAta Indica il personale ATA destinatario dell'avviso [D=DSGA, A=personale ATA]
     */
-   #[ORM\Column(name: 'destinatari_ata', type: 'simple_array', nullable: true)]
+   #[ORM\Column(name: 'destinatari_ata', type: Types::SIMPLE_ARRAY, nullable: true)]
    private ?array $destinatariAta = [];

   /**
     * @var array|null $destinatariSpeciali Indica i destinatari speciali dell'avviso [S=RSPP]
     */
-   #[ORM\Column(name: 'destinatari_speciali', type: 'simple_array', nullable: true)]
+   #[ORM\Column(name: 'destinatari_speciali', type: Types::SIMPLE_ARRAY, nullable: true)]
    private ?array $destinatariSpeciali = [];

   /**
     * @var array|null $destinatari Indica i destinatari dell'avviso [C=coordinatori, D=docenti, G=genitori, A=alunni, R=RSU, I=consiglio di istituto, L=genitori rappresentanti di classe, S=alunni rappresentanti di classe, P=consulta provinciale]
     */
-   #[ORM\Column(type: 'simple_array', nullable: true)]
+   #[ORM\Column(type: Types::SIMPLE_ARRAY, nullable: true)]
    private ?array $destinatari = [];

   /**
@@ @@
     *
     *
     */
-   #[ORM\Column(name: 'filtro_tipo', type: 'string', length: 1, nullable: false)]
+   #[ORM\Column(name: 'filtro_tipo', type: Types::STRING, length: 1, nullable: false)]
    #[Assert\Choice(choices: ['N', 'T', 'C', 'M', 'U'], strict: true, message: 'field.choice')]
    private ?string $filtroTipo = 'N';

@@ @@
   /**
    * @var array|null $filtro Lista degli ID per il tipo di filtro specificato
    */
-  #[ORM\Column(name: 'filtro', type: 'simple_array', nullable: true)]
+  #[ORM\Column(name: 'filtro', type: Types::SIMPLE_ARRAY, nullable: true)]
   private ?array $filtro = [];

   /**
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


52) src/Entity/AvvisoClasse.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\AvvisoClasseRepository;
 use DateTime;
 use Doctrine\ORM\Mapping as ORM;
@@ @@
   /**
    * @var int|null $id Identificativo univoco
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
   private ?Classe $classe = null;

   /**
-   * @var DateTime|null $letto Data e ora di lettura dell'avviso in classe
+   * @var DateTimeInterface|null $letto Data e ora di lettura dell'avviso in classe
    */
-  #[ORM\Column(type: 'datetime', nullable: true)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: true)]
   private ?DateTime $letto = null;
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


53) src/Entity/AvvisoUtente.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\AvvisoUtenteRepository;
 use DateTime;
 use Doctrine\ORM\Mapping as ORM;
@@ @@
   /**
    * @var int|null $id Identificativo univoco
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
   private ?Utente $utente = null;

   /**
-   * @var DateTime|null $letto Data e ora di lettura dell'avviso da parte dell'utente
+   * @var DateTimeInterface|null $letto Data e ora di lettura dell'avviso da parte dell'utente
    */
-  #[ORM\Column(type: 'datetime', nullable: true)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: true)]
   private ?DateTime $letto = null;
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


54) src/Entity/CambioClasse.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\CambioClasseRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per il cambio classe
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
   private ?Alunno $alunno = null;

   /**
-   * @var DateTime|null $inizio Data iniziale della permanenza nella classe indicata
-   *
+   * @var DateTimeInterface|null $inizio Data iniziale della permanenza nella classe indicata
    */
-  #[ORM\Column(type: 'date', nullable: false)]
+  #[ORM\Column(type: Types::DATE_MUTABLE, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $inizio = null;

   /**
-   * @var DateTime|null $fine Data finale della permanenza nella classe indicata
-   *
+   * @var DateTimeInterface|null $fine Data finale della permanenza nella classe indicata
    */
-  #[ORM\Column(type: 'date', nullable: false)]
+  #[ORM\Column(type: Types::DATE_MUTABLE, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $fine = null;
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 255, nullable: true)]
+  #[ORM\Column(type: Types::STRING, length: 255, nullable: true)]
   #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
   private ?string $note = '';
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


55) src/Entity/Cattedra.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\CattedraRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per la cattedra
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
    * @var bool $attiva Indica se la cattedra è attiva o no
    */
-  #[ORM\Column(type: 'boolean', nullable: false)]
+  #[ORM\Column(type: Types::BOOLEAN, nullable: false)]
   private bool $attiva = true;

   /**
    * @var bool $supplenza Indica se la cattedra è una supplenza temporanea o no
    */
-  #[ORM\Column(type: 'boolean', nullable: false)]
+  #[ORM\Column(type: Types::BOOLEAN, nullable: false)]
   private bool $supplenza = false;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['N', 'I', 'P', 'A'], strict: true, message: 'field.choice')]
   private ?string $tipo = 'N';
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


56) src/Entity/Circolare.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\CircolareRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per la circolare
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
   /**
    * @var int $anno Anno iniziale dell'A.S. a cui si riferisce la circolare
    */
-  #[ORM\Column(type: 'integer', nullable: false)]
+  #[ORM\Column(type: Types::INTEGER, nullable: false)]
   private int $anno = 0;

   /**
    * @var int $numero Numero della circolare
    */
-  #[ORM\Column(type: 'integer', nullable: false)]
+  #[ORM\Column(type: Types::INTEGER, nullable: false)]
   private int $numero = 0;

   /**
-   * @var DateTime|null $data Data della circolare
-   *
+   * @var DateTimeInterface|null $data Data della circolare
    */
-  #[ORM\Column(type: 'date', nullable: false)]
+  #[ORM\Column(type: Types::DATE_MUTABLE, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $data = null;
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 255, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 255, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 255, maxMessage: 'field.maxlength')]
   private ?string $oggetto = '';
@@ @@
   /**
    * @var string|null $documento Documento della circolare
    */
-  #[ORM\Column(type: 'string', length: 255, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 255, nullable: false)]
   private ?string $documento = '';

   /**
    * @var array|null $allegati Lista di file allegati alla circolare
    */
-  #[ORM\Column(type: 'array', nullable: true)]
+  #[ORM\Column(type: Types::ARRAY, nullable: true)]
   private ?array $allegati = [];

   /**
    * @var bool $ata Indica se il personale ATA è destinatario della circolare o no
    */
-  #[ORM\Column(type: 'boolean', nullable: false)]
+  #[ORM\Column(type: Types::BOOLEAN, nullable: false)]
   private bool $ata = false;

   /**
    * @var bool $dsga Indica se il DSGA è destinatario della circolare o no
    */
-  #[ORM\Column(type: 'boolean', nullable: false)]
+  #[ORM\Column(type: Types::BOOLEAN, nullable: false)]
   private bool $dsga = false;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['N', 'T', 'C', 'U'], strict: true, message: 'field.choice')]
   private ?string $genitori = 'N';

@@ @@
   /**
    * @var array|null $filtroGenitori Lista dei filtri per i genitori
    */
-  #[ORM\Column(name: 'filtro_genitori', type: 'simple_array', nullable: true)]
+  #[ORM\Column(name: 'filtro_genitori', type: Types::SIMPLE_ARRAY, nullable: true)]
   private ?array $filtroGenitori = [];

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['N', 'T', 'C', 'U'], strict: true, message: 'field.choice')]
   private ?string $alunni = 'N';

@@ @@
   /**
    * @var array|null $filtroAlunni Lista dei filtri per gli alunni
    */
-  #[ORM\Column(name: 'filtro_alunni', type: 'simple_array', nullable: true)]
+  #[ORM\Column(name: 'filtro_alunni', type: Types::SIMPLE_ARRAY, nullable: true)]
   private ?array $filtroAlunni = [];

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['N', 'T', 'C'], strict: true, message: 'field.choice')]
   private ?string $coordinatori = 'N';

@@ @@
   /**
    * @var array|null $filtroCoordinatori Lista dei filtri per i coordinatori
    */
-  #[ORM\Column(name: 'filtro_coordinatori', type: 'simple_array', nullable: true)]
+  #[ORM\Column(name: 'filtro_coordinatori', type: Types::SIMPLE_ARRAY, nullable: true)]
   private ?array $filtroCoordinatori = [];

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['N', 'T', 'C', 'M', 'U'], strict: true, message: 'field.choice')]
   private ?string $docenti = 'N';

@@ @@
   /**
    * @var array|null $filtroDocenti Lista dei filtri per i docenti
    */
-  #[ORM\Column(name: 'filtro_docenti', type: 'simple_array', nullable: true)]
+  #[ORM\Column(name: 'filtro_docenti', type: Types::SIMPLE_ARRAY, nullable: true)]
   private ?array $filtroDocenti = [];

   /**
    * @var array|null $altri Altri destinatari della circolare non riferiti ad utenti sul registro
    */
-  #[ORM\Column(type: 'simple_array', nullable: true)]
+  #[ORM\Column(type: Types::SIMPLE_ARRAY, nullable: true)]
   private array $altri = [];

   /**
    * @var bool $firma Indica se è richiesta la conferma esplicita di lettura della circolare o no
    */
-  #[ORM\Column(type: 'boolean', nullable: false)]
+  #[ORM\Column(type: Types::BOOLEAN, nullable: false)]
   private bool $firma = false;

   /**
    * @var bool $notifica Indica se è richiesta la notifica della circolare ai destinatari o no
    */
-  #[ORM\Column(type: 'boolean', nullable: false)]
+  #[ORM\Column(type: Types::BOOLEAN, nullable: false)]
   private bool $notifica = false;

   /**
    * @var bool $pubblicata Indica se la circolare è pubblicata o no
    */
-  #[ORM\Column(type: 'boolean', nullable: false)]
+  #[ORM\Column(type: Types::BOOLEAN, nullable: false)]
   private bool $pubblicata = false;
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


57) src/Entity/CircolareClasse.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\CircolareClasseRepository;
 use DateTime;
 use Doctrine\ORM\Mapping as ORM;
@@ @@
   /**
    * @var int|null $id Identificativo univoco
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
   private ?Classe $classe = null;

   /**
-   * @var DateTime|null $letta Data e ora di lettura della circolare nella classe
+   * @var DateTimeInterface|null $letta Data e ora di lettura della circolare nella classe
    */
-  #[ORM\Column(type: 'datetime', nullable: true)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: true)]
   private ?DateTime $letta = null;
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


58) src/Entity/CircolareUtente.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\CircolareUtenteRepository;
 use DateTime;
 use Doctrine\ORM\Mapping as ORM;
@@ @@
   /**
    * @var int|null $id Identificativo univoco
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
   private ?Utente $utente = null;

   /**
-   * @var DateTime|null $letta Data e ora di lettura implicita della circolare da parte dell'utente
+   * @var DateTimeInterface|null $letta Data e ora di lettura implicita della circolare da parte dell'utente
    */
-  #[ORM\Column(type: 'datetime', nullable: true)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: true)]
   private ?DateTime $letta = null;

   /**
-   * @var DateTime|null $confermata Data e ora di conferma esplicita della lettura della circolare da parte dell'utente
+   * @var DateTimeInterface|null $confermata Data e ora di conferma esplicita della lettura della circolare da parte dell'utente
    */
-  #[ORM\Column(type: 'datetime', nullable: true)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: true)]
   private ?DateTime $confermata = null;
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


59) src/Entity/Classe.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\ClasseRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per la classe
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'smallint', nullable: false)]
+  #[ORM\Column(type: Types::SMALLINT, nullable: false)]
   #[Assert\Choice(choices: [1, 2, 3, 4, 5], strict: true, message: 'field.choice')]
   private int $anno = 1;

@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 64, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 64, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Length(max: 64, maxMessage: 'field.maxlength')]
   private ?string $sezione = 'A';
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 64, nullable: true)]
+  #[ORM\Column(type: Types::STRING, length: 64, nullable: true)]
   #[Assert\Length(max: 64, maxMessage: 'field.maxlength')]
   private ?string $gruppo = '';

@@ @@
    *
    *
    */
-  #[ORM\Column(name: 'ore_settimanali', type: 'smallint', nullable: false)]
+  #[ORM\Column(name: 'ore_settimanali', type: Types::SMALLINT, nullable: false)]
   #[Assert\Positive(message: 'field.positive')]
   private int $oreSettimanali = 0;
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


60) src/Entity/Colloquio.php:7

    ---------- begin diff ----------
@@ @@

 namespace App\Entity;

+use Doctrine\DBAL\Types\Types;
+use DateTimeInterface;
 use App\Repository\ColloquioRepository;
 use Stringable;
 use DateTime;
@@ @@
   /**
    * @var int|null $id Identificativo univoco per il colloquio
    */
-  #[ORM\Column(type: 'integer')]
+  #[ORM\Column(type: Types::INTEGER)]
   #[ORM\Id]
   #[ORM\GeneratedValue(strategy: 'AUTO')]
   private ?int $id = null;

   /**
-   * @var DateTime|null $creato Data e ora della creazione iniziale dell'istanza
+   * @var DateTimeInterface|null $creato Data e ora della creazione iniziale dell'istanza
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $creato = null;

   /**
-   * @var DateTime|null $modificato Data e ora dell'ultima modifica dei dati
+   * @var DateTimeInterface|null $modificato Data e ora dell'ultima modifica dei dati
    */
-  #[ORM\Column(type: 'datetime', nullable: false)]
+  #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: false)]
   private ?DateTime $modificato = null;

   /**
@@ @@
   private ?Docente $docente = null;

   /**
-   * @var DateTime|null $data Data del colloquio
-   *
+   * @var DateTimeInterface|null $data Data del colloquio
    */
-  #[ORM\Column(type: 'date', nullable: false)]
+  #[ORM\Column(type: Types::DATE_MUTABLE, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $data = null;

   /**
-   * @var DateTime|null $inizio Ora iniziale del colloquio
-   *
+   * @var DateTimeInterface|null $inizio Ora iniziale del colloquio
    */
-  #[ORM\Column(type: 'time', nullable: false)]
+  #[ORM\Column(type: Types::TIME_MUTABLE, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $inizio = null;

   /**
-   * @var DateTime|null $fine Ora finale del colloquio
-   *
+   * @var DateTimeInterface|null $fine Ora finale del colloquio
    */
-  #[ORM\Column(type: 'time', nullable: false)]
+  #[ORM\Column(type: Types::TIME_MUTABLE, nullable: false)]
   #[Assert\NotBlank(message: 'field.notblank')]
   #[Assert\Type(type: '\DateTime', message: 'field.type')]
   private ?DateTime $fine = null;
@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 1, nullable: false)]
+  #[ORM\Column(type: Types::STRING, length: 1, nullable: false)]
   #[Assert\Choice(choices: ['D', 'P'], strict: true, message: 'field.choice')]
   private string $tipo = 'P';

@@ @@
    *
    *
    */
-  #[ORM\Column(type: 'string', length: 2048, nullable: true)]
+  #[ORM\Column(type: Types::STRING, length: 2048, nullable: true)]
   #[Assert\Length(max: 2048, maxMessage: 'field.maxlength')]
   private ?string $luogo = '';

@@ @@
   /**
    * @var int $durata Durata di ogni colloquio del ricevimento (in minuti)
    */
-  #[ORM\Column(type: 'integer', nullable: false)]
+  #[ORM\Column(type: Types::INTEGER, nullable: false)]
   private int $durata = 10;

   /**
    * @var int $numero Numero di colloqui per ricevimento
    */
-  #[ORM\Column(type: 'integer', nullable: false)]
+  #[ORM\Column(type: Types::INTEGER, nullable: false)]
   private int $numero = 6;

   /**
    * @var bool $abilitato Indica se il ricevimento è abilitato
    */
-  #[ORM\Column(type: 'boolean', nullable: false)]
+  #[ORM\Column(type: Types::BOOLEAN, nullable: false)]
   private bool $abilitato = true;
    ----------- end diff -----------

Applied rules:
 * MakeEntityDateTimePropertyDateTimeInterfaceRector
 * AttributeKeyToClassConstFetchRector


 [OK] 60 files have been changed by Rector                                                                              

